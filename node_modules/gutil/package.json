{
  "_args": [
    [
      {
        "raw": "gutil",
        "scope": null,
        "escapedName": "gutil",
        "name": "gutil",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/melliot1/Sites/New Site/theme-development"
    ]
  ],
  "_from": "gutil@latest",
  "_id": "gutil@1.6.4",
  "_inCache": true,
  "_location": "/gutil",
  "_npmUser": {
    "name": "ludo1026",
    "email": "ludo1026@free.fr"
  },
  "_npmVersion": "1.4.28",
  "_phantomChildren": {},
  "_requested": {
    "raw": "gutil",
    "scope": null,
    "escapedName": "gutil",
    "name": "gutil",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/gutil/-/gutil-1.6.4.tgz",
  "_shasum": "77cf9faa058c0476d63b9d3ac5fbe04e072f6cd2",
  "_shrinkwrap": null,
  "_spec": "gutil",
  "_where": "/Users/melliot1/Sites/New Site/theme-development",
  "dependencies": {
    "sliced": "*"
  },
  "description": "GUtil",
  "devDependencies": {
    "jasmine-node": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "77cf9faa058c0476d63b9d3ac5fbe04e072f6cd2",
    "tarball": "https://registry.npmjs.org/gutil/-/gutil-1.6.4.tgz"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "gitHead": "c2890fdd030bb9f0cad9f5c7c9da442411c3903a",
  "licenses": [
    {
      "type": "GNU"
    }
  ],
  "main": "lib/gutil.js",
  "maintainers": [
    {
      "name": "ludo1026",
      "email": "ludo1026@free.fr"
    }
  ],
  "name": "gutil",
  "optionalDependencies": {},
  "private": false,
  "readme": "gutil\r\n=====\r\n\r\nGeneral Util methods\r\n\r\n- **get** : Get object attribute value :\r\n```js\r\nget( {o1:{o2:{o3:{a:1}}}}, \"o1.o2.o3.a\") // => 1\r\n```\r\n- **has** : Return true if the object has the attribute value :\r\n```js\r\n// array\r\nhas( [{a:1,b:1},{a:2,b:2}], \"a\", 1 ) // => true\r\nhas( [{a:1,b:1},{a:2,b:2}], \"a\", 11 ) // => false\r\nhas( [{o1:{a:1,b:1}},{o2:{a:2,b:2}}], \"o1.a\", 1 ) // => true\r\nhas( [{o1:{a:1,b:1}},{o2:{a:2,b:2}}], \"o1.a\", 11 ) // => false\r\n// object\r\nhas( {o:{a:1,b:1}}, \"a\", 1 ) // => true\r\nhas( {o:{a:1,b:1}}, \"a\", 11 ) // => false\r\nhas( {o:{o1:{a:1,b:1},o2:{a:2,b:2}}}, \"o1.a\", 1 ) // => true\r\nhas( {o:{o1:{a:1,b:1},o2:{a:2,b:2}}}, \"o1.a\", 11 ) // => false\r\n```\r\n- **by** : Select values from an array or an object if they have the attribute value.\r\n```js\r\n// array\r\nby( [{a:1,b:1},{a:2,b:2}], \"a\", 1 ) // => [{a:1,b:1}]\r\nby( [{a:1,b:1},{a:2,b:2}], \"a\", 11 ) // => []\r\nby( [{o1:{a:1,b:1}},{o2:{a:2,b:2}}], \"o1.a\", 1 ) // => [{o1:{a:1,b:1}}]\r\nby( [{o1:{a:1,b:1}},{o2:{a:2,b:2}}], \"o1.a\", 11 ) // => [{o1:{a:1,b:1}}]\r\n// object\r\nby( {o:{a:1,b:1}}, \"a\", 1 ) // => [{a:1,b:1}]\r\nby( {o:{a:1,b:1}}, \"a\", 11 ) // => []\r\nby( {o:{o1:{a:1,b:1},o2:{a:2,b:2}}}, \"o1.a\", 1 ) // => [{o1:{a:1,b:1}}]\r\nby( {o:{o1:{a:1,b:1},o2:{a:2,b:2}}}, \"o1.a\", 11 ) // => []\r\n```\r\n- **byNot** : Select values from an array or an object if they do not have the attribute value :\r\n```js\r\n// array\r\nbyNot( [{a:1,b:1},{a:2,b:2}], \"a\", 1 ) // => [{a:2,b:2}]\r\nbyNot( [{a:1,b:1},{a:2,b:2}], \"a\", 2 ) // => [{a:1,b:1}]\r\nbyNot( [{a:1,b:1},{a:2,b:2}], \"a\", 11 ) // => [{a:1,b:1},{a:2,b:2}]\r\nbyNot( [{o1:{a:1,b:1}},{o2:{a:2,b:2}}], \"o1.a\", 1 ) // => [{o2:{a:2,b:2}}]\r\nbyNot( [{o1:{a:1,b:1}},{o2:{a:2,b:2}}], \"o1.a\", 11 ) // => [{o1:{a:1,b:1}},{o2:{a:2,b:2}}]\r\n// object\r\nbyNot( {o:{a:1,b:1}}, \"a\", 1 ) // => []\r\nbyNot( {o:{a:1,b:1}}, \"a\", 2 ) // => [{a:1,b:1}]\r\nbyNot( {o:{o1:{a:1,b:1},o2:{a:2,b:2}}}, \"o1.a\", 1 ) // => [{o2:{a:2,b:2}}]\r\nbyNot( {o:{o1:{a:1,b:1},o2:{a:2,b:2}}}, \"o1.a\", 11 ) // => [{o1:{a:1,b:1}},{o2:{a:2,b:2}}]\r\n```\r\n- **replace2** : scan only one time the text and replace many txt occurences during this scan\r\nsample :\r\n```js\r\n// given\r\nvar txt = \"simple text\";\r\nvar oldValues = [\"simple\",\"text\"];\r\nvar newValues = [\"hello\",\"world\"];\r\n// when\r\nvar result = replace2(txt, oldValues, newValues);\r\n// txt == \"hello world\";\r\n```\r\n- **add** : insert value in an array\r\n- **addAll** : insert values in an array\r\n- **all**\r\n- **and**\r\n- **Assert**\r\n- **concat**\r\n- **each**\r\n- **filter**\r\n- **log**\r\n- **oneBy**\r\n- **requireReload**\r\n- **sort** : sort array elements\r\n- **unique**\r\n- **walk**\r\n- **string** : utils functions for String\r\n",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "node node_modules/jasmine-node/lib/jasmine-node/cli.js spec"
  },
  "version": "1.6.4"
}
